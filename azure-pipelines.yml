trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

steps:
  # Checkout the API server repository
  - checkout: self
    displayName: "Checkout API Server (FX-TradeHub-API)"

  # Install Node.js 18
  - task: NodeTool@0
    inputs:
      versionSpec: "18"
    displayName: "Install Node.js 18"

  # Install dependencies for the API server (FX-TradeHub-API)
  - script: |
      cd fx_trader_server
      npm ci
    displayName: "Install API Server dependencies"

  # Start the API server in the background
  - script: |
      nohup npm start &
      sleep 15
    displayName: "Start API Server and wait for readiness"

  # Check if the API server is ready
  - script: |
      curl --retry 5 --retry-delay 5 --retry-connrefused http://localhost:3000/api/counterparties
    displayName: "Check API Server Readiness"

  # Clone the Playwright API Tests repository
  - script: |
      git clone https://github.com/sd576/Playwright-API-Tests.git /tmp/fx_trader_api
      cd /tmp/fx_trader_api
      npm ci
    displayName: "Clone and set up Playwright tests"

  # Create test-results directory
  - script: mkdir -p /tmp/fx_trader_api/test-results
    displayName: "Ensure test-results directory exists"

  # Run Playwright tests
  - script: |
      cd /tmp/fx_trader_api
      npx playwright test --reporter=dot,junit
    displayName: "Run Playwright Tests"

  # Publish the Playwright test results
  - task: PublishTestResults@2
    inputs:
      searchFolder: "/tmp/fx_trader_api/test-results"
      testResultsFormat: "JUnit"
      testResultsFiles: "**/results.xml"
      mergeTestResults: true
      failTaskOnFailedTests: true
    displayName: "Publish Playwright Test Results"

  # Publish the Playwright report as an artifact
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: /tmp/fx_trader_api/playwright-report
      artifact: playwright-report
      publishLocation: "pipeline"
    displayName: "Publish Playwright Report"
    condition: succeededOrFailed()
